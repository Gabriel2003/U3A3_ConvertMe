/*
 * Gabriel Hurtado.
 * Linear Conversion
 * April 30th, 2018
 * This is a program that helps a user to conver different distances into 
 * a different measurement system.  
 */

package linear;



/**
 *
 * @author gahur1962
 */
public class conversion extends javax.swing.JFrame {

    /**
     * Creates new form conversion
     */
    public conversion() {
        initComponents();
    }
    
    public double InchestoCentimeters( double unit){
        double centimeters;
        
     //  inches = Double.parseDouble(valuefield.getText());
       centimeters = unit * 2.54; 
       
       outputLabel.setText( "The value of " + unit + " in " +
                            " Is equal to " + centimeters + " cm ");
        return centimeters;
        
    }

     public double CentimeterstoInches( double unit){
         double inches; 
         
     // centimeters = Double.parseDouble(valuefield.getText());
       inches = unit  * 0.39;
         
       outputLabel.setText( "The value of " + unit + " cm " 
                            + " Is equal to " + inches + " in ");
        return inches;
     }
    
      public double FeettoCentimeters( double unit){
          double centimeters;  
          
    //   feet = Double.parseDouble(valuefield.getText());
       centimeters = unit * 30;
       
       outputLabel.setText( "The value of " + unit + " ft " 
                            + " Is equal to " + centimeters + " cm ");
        return centimeters;
          
      }
     
       public double CentimeterstoFeet( double unit){
           double feet;
           
       // unit = Double.parseDouble(valuefield.getText());
        feet = unit/30.48;
        
        outputLabel.setText( "The value of " + unit + " cm " 
                             + " Is equal to " + feet + " ft ");
        return feet;
       }
       
       public double YardstoMeters( double unit){
           double meters;
           
      //  yards = Double.parseDouble(valuefield.getText());
        meters = unit * 0.91; 
        
        outputLabel.setText( "The value of " + unit + " yds " 
                                + " Is equal to " + meters + " mtrs ");
        return meters;
       }
       
          public double MeterstoYards(double unit){
              double yards; 
              
       // unit  = Double.parseDouble(valuefield.getText());
        yards = unit/0.91;
                
        outputLabel.setText( "The value of " + unit + " mtrs " 
                            + " Is equal to " + yards + " yds ");
        return yards;
          }
       
        public double MilestoKilometers( double unit){
                double kilometers;
                
        // miles = Double.parseDouble(valuefield.getText());
        kilometers = unit * 1.6; 
        
        outputLabel.setText( "The value of " + unit + " mi " + 
                             " Is equal to " + kilometers + " km ");    
        return kilometers;
        }
    
        public double KilometerstoMiles( double unit ){
             double miles;
            
         // kilometers = Double.parseDouble(valuefield.getText());
         miles = unit * 0.62; 
            
          outputLabel.setText( "The value of " + unit + " km " + 
                             " Is equal to " + miles + " mi "); 
        return miles;
        }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        InchestoCentimeters = new javax.swing.JRadioButton();
        FeettoCentimeters = new javax.swing.JRadioButton();
        YardstoMeters = new javax.swing.JRadioButton();
        MilestoKilometers = new javax.swing.JRadioButton();
        CentimeterstoInches = new javax.swing.JRadioButton();
        CentimeterstoFeet = new javax.swing.JRadioButton();
        MeterstoYards = new javax.swing.JRadioButton();
        KilometerstoMiles = new javax.swing.JRadioButton();
        valuelabel = new javax.swing.JLabel();
        valuefield = new javax.swing.JTextField();
        CalculateButton = new javax.swing.JButton();
        outputLabel = new javax.swing.JLabel();
        ResetButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("Linear Conversion ");

        InchestoCentimeters.setText("Inches to Centimeters ");
        InchestoCentimeters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InchestoCentimetersActionPerformed(evt);
            }
        });

        FeettoCentimeters.setText("Feet to Centimeters");

        YardstoMeters.setText("Yards to Meters ");

        MilestoKilometers.setText("Miles to Kilometers ");
        MilestoKilometers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MilestoKilometersActionPerformed(evt);
            }
        });

        CentimeterstoInches.setText("Centimeters to inches ");

        CentimeterstoFeet.setText("Centimeters to Feet ");

        MeterstoYards.setText("Meters to Yards");

        KilometerstoMiles.setText("Kilometers to Miles ");

        valuelabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        valuelabel.setText("Enter value to be converted ");

        CalculateButton.setText("CALCULATE");
        CalculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateButtonActionPerformed(evt);
            }
        });

        ResetButton.setText("RESET");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Exit ");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CalculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(outputLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(FeettoCentimeters, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(InchestoCentimeters))
                                    .addComponent(valuelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MilestoKilometers, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(YardstoMeters, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CentimeterstoInches)
                                    .addComponent(MeterstoYards)
                                    .addComponent(KilometerstoMiles)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ResetButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(valuefield, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CentimeterstoFeet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InchestoCentimeters)
                    .addComponent(CentimeterstoInches))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FeettoCentimeters)
                    .addComponent(CentimeterstoFeet))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YardstoMeters)
                    .addComponent(MeterstoYards))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MilestoKilometers)
                    .addComponent(KilometerstoMiles))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valuelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valuefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CalculateButton)
                    .addComponent(ResetButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InchestoCentimetersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InchestoCentimetersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InchestoCentimetersActionPerformed

    private void MilestoKilometersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MilestoKilometersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MilestoKilometersActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // Reset Button, giving it a function:
        InchestoCentimeters.setSelected(false);
        CentimeterstoInches.setSelected(false);
        FeettoCentimeters.setSelected(false);
        CentimeterstoFeet.setSelected(false);
        YardstoMeters.setSelected(false);
        MeterstoYards.setSelected(false);
        MilestoKilometers.setSelected(false);
        KilometerstoMiles.setSelected(false);
        valuefield.setText(null);
        outputLabel.setText(null); 
        
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       // Gui will be able to close by pressing ctrl+z or simply pressing exit: 
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void CalculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateButtonActionPerformed
        // "If" statements that will use the methods already created:\
        double unit;
        unit = Double.parseDouble(valuefield.getText());
        
        if (InchestoCentimeters.isSelected()){
            InchestoCentimeters(unit);
        }
        else if (CentimeterstoInches.isSelected()){
            CentimeterstoInches(unit);
        }
        else if (FeettoCentimeters.isSelected()){
            FeettoCentimeters(unit); 
        }
        else if (CentimeterstoFeet.isSelected()){
            CentimeterstoFeet(unit);
        }
        else if (YardstoMeters.isSelected()){
            YardstoMeters(unit);
        }
        else if (MeterstoYards.isSelected()){
            MeterstoYards(unit);
        }
        else if (MilestoKilometers.isSelected()){
            MilestoKilometers(unit);
        }
        else {
            KilometerstoMiles(unit);
        }
    }//GEN-LAST:event_CalculateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new conversion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalculateButton;
    private javax.swing.JRadioButton CentimeterstoFeet;
    private javax.swing.JRadioButton CentimeterstoInches;
    private javax.swing.JRadioButton FeettoCentimeters;
    private javax.swing.JRadioButton InchestoCentimeters;
    private javax.swing.JRadioButton KilometerstoMiles;
    private javax.swing.JRadioButton MeterstoYards;
    private javax.swing.JRadioButton MilestoKilometers;
    private javax.swing.JButton ResetButton;
    private javax.swing.JRadioButton YardstoMeters;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextField valuefield;
    private javax.swing.JLabel valuelabel;
    // End of variables declaration//GEN-END:variables
}
